name: CI/CD Pipeline for React/Next.js

# Trigger the workflow on push or pull requests to the 'main' branch
on:
  push:
    branches:
      - master
      # - develop
  # pull_request:
  #   branches:
  #     - master
      # - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # Define the steps to run
    steps:
      # 1. Checkout the code from the repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Node.js environment (specify Node.js version)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      # 3. Cache npm dependencies to speed up workflow
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4. Install dependencies
      - name: Install dependencies
        run: npm ci

      # # 5. Run TypeScript type checking
      # - name: TypeScript type check
      #   run: npm run type-check

      # # 6. Run tests
      # - name: Run tests
      #   run: npm test

      # 7. Build the project (production build for Next.js)
      - name: Build project
        run: npm run build

  # Optional: Deploy job after build succeeds (could be to Vercel, Netlify, or your own server)
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Install Vercel CLI
      - name: Install Vercel CLI
        run: npm install -g vercel

      # Example for deploying to Vercel (assuming VERCEL_TOKEN is stored as a secret in GitHub)
      - name: Deploy to Vercel
        run: vercel --prod --token=$VERCEL_TOKEN --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
